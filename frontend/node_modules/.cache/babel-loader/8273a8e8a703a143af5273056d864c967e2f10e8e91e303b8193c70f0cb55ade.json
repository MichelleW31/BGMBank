{"ast":null,"code":"var _jsxFileName = \"/Users/mwilliams/Desktop/PersonalProjects/JobSearch/bgm-bank/src/components/Signup/Signup.tsx\",\n  _s = $RefreshSig$();\n/* eslint-disable @typescript-eslint/no-misused-promises */\nimport styles from './Signup.module.scss';\nimport { useRef, useState, useEffect } from 'react';\nimport Image from 'components/Image/Image';\nimport { NavLink } from 'react-router-dom';\nimport { faCheck, faTimes, faInfoCircle } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Signup = () => {\n  _s();\n  const [user, setUser] = useState({\n    username: '',\n    password: '',\n    passwordMatch: ''\n  });\n  const [validName, setValidName] = useState(false);\n  const [userFocus, setUserFocus] = useState(false);\n  const [validPassword, setValidPassword] = useState(false);\n  const [passwordFocus, setPasswordFocus] = useState(false);\n  const [validMatch, setValidMatch] = useState(false);\n  const [matchFocus, setMatchFocus] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const [errors, setErrors] = useState({\n    errorStatus: false,\n    errorMessage: ''\n  });\n  const {\n    username,\n    email,\n    password,\n    passwordMatch\n  } = user;\n  const {\n    errorStatus,\n    errorMessage\n  } = errors;\n  const errorCheck = () => {\n    const message = 'Please enter a valid username and password.';\n\n    // empty credentials error\n    if (username === '' || password === '' || email === '' || passwordMatch === '') {\n      setErrors({\n        ...errors,\n        errorStatus: true,\n        errorMessage: message\n      });\n    } else {\n      setErrors({\n        ...errors,\n        errorStatus: false,\n        errorMessage: ''\n      });\n    }\n  };\n  const USER_REGEX = /^[a-zA-Z][a-zA-Z0-9-_]{3,23}$/;\n  const PASSWORD_REGEX = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%]).{8,24}$/;\n  const userRef = useRef(null);\n  const errRef = useRef(null);\n  useEffect(() => {\n    if (userRef.current !== null) {\n      userRef.current.focus();\n    }\n  }, []);\n  useEffect(() => {\n    setValidName(USER_REGEX.test(username));\n  }, [username]);\n  useEffect(() => {\n    setValidPassword(PASSWORD_REGEX.test(password));\n    setValidMatch(password === passwordMatch);\n  }, [password, passwordMatch]);\n  useEffect(() => {\n    setErrors({\n      ...errors,\n      errorStatus: false,\n      errorMessage: ''\n    });\n  }, [username, password, passwordMatch]);\n  const signUp = async e => {\n    e.preventDefault();\n    const v1 = USER_REGEX.test(username);\n    const v2 = PASSWORD_REGEX.test(password);\n    if (!v1 || !v2) {\n      setErrors({\n        ...errors,\n        errorStatus: true,\n        errorMessage: 'Invalid Entry'\n      });\n      return;\n    }\n    errorCheck();\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: styles.SignupContainer,\n    children: [/*#__PURE__*/_jsxDEV(Image, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: styles.SignupForm,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: styles.FormHeaderCopy,\n        children: \"Signup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: signUp,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          hidden: true,\n          htmlFor: \"username\",\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: styles.Input,\n          children: [/*#__PURE__*/_jsxDEV(\"section\", {\n            className: styles.InputArrowContainer,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"username\",\n              ref: userRef,\n              autoComplete: \"off\",\n              required: true,\n              \"aria-invalid\": validName ? 'false' : 'true',\n              \"aria-describedby\": \"uidnote\",\n              placeholder: \"Username\",\n              value: username,\n              onChange: e => setUser({\n                ...user,\n                username: e.target.value\n              }),\n              onFocus: () => setUserFocus(true),\n              onBlur: () => setUserFocus(false)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this), validName && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.Valid,\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faCheck\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this), validName || username === '' ? null : /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.Invalid,\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faTimes\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"uidnote\",\n            className: userFocus && username !== '' && !validName ? styles.Instructions : styles.Offscreen,\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faInfoCircle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, this), \"4 to 24 characters\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this), \" Must begin with a letter. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 48\n            }, this), \" Letters, number, underscores, hyphens allowed.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          hidden: true,\n          htmlFor: \"password\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: styles.Input,\n          children: [/*#__PURE__*/_jsxDEV(\"section\", {\n            className: styles.InputArrowContainer,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"password\",\n              required: true,\n              \"aria-invalid\": validPassword ? 'false' : 'true',\n              \"aria-describedby\": \"pwdnote\",\n              placeholder: \"Password\",\n              value: password,\n              onChange: e => setUser({\n                ...user,\n                password: e.target.value\n              }),\n              onFocus: () => setPasswordFocus(true),\n              onBlur: () => setPasswordFocus(false)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this), validPassword && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.Valid,\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faCheck\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 17\n            }, this), validPassword || password === '' ? null : /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.Invalid,\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faTimes\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"pwdnote\",\n            className: passwordFocus && !validPassword ? styles.Instructions : styles.Offscreen,\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faInfoCircle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 15\n            }, this), \"8 to 24 characters\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 15\n            }, this), \" Must include uppercase and lowercase letters, a number and a special character. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 102\n            }, this), \" Allowed special characters: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              \"aria-label\": \"exclamation mark\",\n              children: \"!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 35\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              \"aria-label\": \"at symbol\",\n              children: \"@\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 80\n            }, this), ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n              \"aria-label\": \"hashtag\",\n              children: \"#\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              \"aria-label\": \"dollar sign\",\n              children: \"$\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 51\n            }, this), ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n              \"aria-label\": \"percent\",\n              children: \"%\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          hidden: true,\n          htmlFor: \"confirm_pwd\",\n          children: \"Confirm Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: styles.Input,\n          children: [/*#__PURE__*/_jsxDEV(\"section\", {\n            className: styles.InputArrowContainer,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"confirm_pwd\",\n              placeholder: \"Confirm Password\",\n              required: true,\n              \"aria-invalid\": validMatch ? 'false' : 'true',\n              \"aria-describedby\": \"confirmnote\",\n              onChange: e => setUser({\n                ...user,\n                passwordMatch: e.target.value\n              }),\n              onFocus: () => setMatchFocus(true),\n              onBlur: () => setMatchFocus(false)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 15\n            }, this), validMatch && passwordMatch !== '' && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.Valid,\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faCheck\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 17\n            }, this), validMatch || passwordMatch === '' ? null : /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.Invalid,\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faTimes\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"confirmnote\",\n            className: matchFocus && !validMatch ? styles.Instructions : styles.Offscreen,\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faInfoCircle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 15\n            }, this), \"Must match password entered.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.SignupButton,\n          disabled: !validMatch,\n          children: \"Signup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), errorStatus && /*#__PURE__*/_jsxDEV(\"p\", {\n        ref: errRef,\n        \"aria-live\": \"assertive\",\n        className: styles.Error,\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: styles.ExistingAccountCopy,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Already have an account?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(NavLink, {\n            to: \"/\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(Signup, \"4L4wpNlxXsbApdZ4vOpazN6Gf1I=\");\n_c = Signup;\nexport default Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["styles","useRef","useState","useEffect","Image","NavLink","faCheck","faTimes","faInfoCircle","FontAwesomeIcon","Signup","user","setUser","username","password","passwordMatch","validName","setValidName","userFocus","setUserFocus","validPassword","setValidPassword","passwordFocus","setPasswordFocus","validMatch","setValidMatch","matchFocus","setMatchFocus","success","setSuccess","errors","setErrors","errorStatus","errorMessage","email","errorCheck","message","USER_REGEX","PASSWORD_REGEX","userRef","errRef","current","focus","test","signUp","e","preventDefault","v1","v2","SignupContainer","SignupForm","FormHeaderCopy","Input","InputArrowContainer","target","value","Valid","Invalid","Instructions","Offscreen","SignupButton","Error","ExistingAccountCopy"],"sources":["/Users/mwilliams/Desktop/PersonalProjects/JobSearch/bgm-bank/src/components/Signup/Signup.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-misused-promises */\nimport styles from './Signup.module.scss';\nimport {ReactElement, useRef, useState, useEffect} from 'react';\nimport Image from 'components/Image/Image';\nimport {NavLink} from 'react-router-dom';\nimport {faCheck, faTimes, faInfoCircle} from '@fortawesome/free-solid-svg-icons';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\n\nconst Signup = (): ReactElement => {\n  const [user, setUser] = useState<{username: string; password: string; passwordMatch: string}>({\n    username: '',\n    password: '',\n    passwordMatch: '',\n  });\n  const [validName, setValidName] = useState(false);\n  const [userFocus, setUserFocus] = useState(false);\n\n  const [validPassword, setValidPassword] = useState(false);\n  const [passwordFocus, setPasswordFocus] = useState(false);\n\n  const [validMatch, setValidMatch] = useState(false);\n  const [matchFocus, setMatchFocus] = useState(false);\n\n  const [success, setSuccess] = useState(false);\n\n  const [errors, setErrors] = useState<{errorStatus: boolean; errorMessage: string}>({\n    errorStatus: false,\n    errorMessage: '',\n  });\n\n  const {username, email, password, passwordMatch} = user;\n  const {errorStatus, errorMessage} = errors;\n\n  const errorCheck = (): void => {\n    const message: string = 'Please enter a valid username and password.';\n\n    // empty credentials error\n    if (username === '' || password === '' || email === '' || passwordMatch === '') {\n      setErrors({...errors, errorStatus: true, errorMessage: message});\n    } else {\n      setErrors({...errors, errorStatus: false, errorMessage: ''});\n    }\n  };\n\n  const USER_REGEX = /^[a-zA-Z][a-zA-Z0-9-_]{3,23}$/;\n  const PASSWORD_REGEX = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%]).{8,24}$/;\n\n  const userRef = useRef<HTMLInputElement>(null);\n  const errRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (userRef.current !== null) {\n      userRef.current.focus();\n    }\n  }, []);\n\n  useEffect(() => {\n    setValidName(USER_REGEX.test(username));\n  }, [username]);\n\n  useEffect(() => {\n    setValidPassword(PASSWORD_REGEX.test(password));\n    setValidMatch(password === passwordMatch);\n  }, [password, passwordMatch]);\n\n  useEffect(() => {\n    setErrors({...errors, errorStatus: false, errorMessage: ''});\n  }, [username, password, passwordMatch]);\n\n  const signUp = async (e: React.FormEvent): Promise<void> => {\n    e.preventDefault();\n    const v1 = USER_REGEX.test(username);\n    const v2 = PASSWORD_REGEX.test(password);\n    if (!v1 || !v2) {\n      setErrors({...errors, errorStatus: true, errorMessage: 'Invalid Entry'});\n      return;\n    }\n    errorCheck();\n  };\n\n  return (\n    <section className={styles.SignupContainer}>\n      <Image />\n      <section className={styles.SignupForm}>\n        <h2 className={styles.FormHeaderCopy}>Signup</h2>\n        <form onSubmit={signUp}>\n          <label hidden htmlFor='username'>\n            Username:\n          </label>\n          <section className={styles.Input}>\n            <section className={styles.InputArrowContainer}>\n              <input\n                type='text'\n                id='username'\n                ref={userRef}\n                autoComplete='off'\n                required\n                aria-invalid={validName ? 'false' : 'true'}\n                aria-describedby='uidnote'\n                placeholder='Username'\n                value={username}\n                onChange={(e) => setUser({...user, username: e.target.value})}\n                onFocus={() => setUserFocus(true)}\n                onBlur={() => setUserFocus(false)}\n              />\n              {validName && (\n                <span className={styles.Valid}>\n                  <FontAwesomeIcon icon={faCheck} />\n                </span>\n              )}\n              {validName || username === '' ? null : (\n                <span className={styles.Invalid}>\n                  <FontAwesomeIcon icon={faTimes} />\n                </span>\n              )}\n            </section>\n            <p\n              id='uidnote'\n              className={userFocus && username !== '' && !validName ? styles.Instructions : styles.Offscreen}\n            >\n              <FontAwesomeIcon icon={faInfoCircle} />4 to 24 characters\n              <br /> Must begin with a letter. <br /> Letters, number, underscores, hyphens allowed.\n            </p>\n          </section>\n\n          <label hidden htmlFor='password'>\n            Password:\n          </label>\n          <section className={styles.Input}>\n            <section className={styles.InputArrowContainer}>\n              <input\n                type='password'\n                id='password'\n                required\n                aria-invalid={validPassword ? 'false' : 'true'}\n                aria-describedby='pwdnote'\n                placeholder='Password'\n                value={password}\n                onChange={(e) => setUser({...user, password: e.target.value})}\n                onFocus={() => setPasswordFocus(true)}\n                onBlur={() => setPasswordFocus(false)}\n              />\n              {validPassword && (\n                <span className={styles.Valid}>\n                  <FontAwesomeIcon icon={faCheck} />\n                </span>\n              )}\n              {validPassword || password === '' ? null : (\n                <span className={styles.Invalid}>\n                  <FontAwesomeIcon icon={faTimes} />\n                </span>\n              )}\n            </section>\n            <p id='pwdnote' className={passwordFocus && !validPassword ? styles.Instructions : styles.Offscreen}>\n              <FontAwesomeIcon icon={faInfoCircle} />8 to 24 characters\n              <br /> Must include uppercase and lowercase letters, a number and a special character. <br /> Allowed\n              special characters: <span aria-label='exclamation mark'>!</span> <span aria-label='at symbol'>@</span>{' '}\n              <span aria-label='hashtag'>#</span> <span aria-label='dollar sign'>$</span>{' '}\n              <span aria-label='percent'>%</span>\n            </p>\n          </section>\n\n          <label hidden htmlFor='confirm_pwd'>\n            Confirm Password:\n          </label>\n          <section className={styles.Input}>\n            <section className={styles.InputArrowContainer}>\n              <input\n                type='password'\n                id='confirm_pwd'\n                placeholder='Confirm Password'\n                required\n                aria-invalid={validMatch ? 'false' : 'true'}\n                aria-describedby='confirmnote'\n                onChange={(e) => setUser({...user, passwordMatch: e.target.value})}\n                onFocus={() => setMatchFocus(true)}\n                onBlur={() => setMatchFocus(false)}\n              />\n              {validMatch && passwordMatch !== '' && (\n                <span className={styles.Valid}>\n                  <FontAwesomeIcon icon={faCheck} />\n                </span>\n              )}\n              {validMatch || passwordMatch === '' ? null : (\n                <span className={styles.Invalid}>\n                  <FontAwesomeIcon icon={faTimes} />\n                </span>\n              )}\n            </section>\n            <p id='confirmnote' className={matchFocus && !validMatch ? styles.Instructions : styles.Offscreen}>\n              <FontAwesomeIcon icon={faInfoCircle} />\n              Must match password entered.\n            </p>\n          </section>\n\n          <button className={styles.SignupButton} disabled={!validMatch}>\n            Signup\n          </button>\n        </form>\n\n        {errorStatus && (\n          <p ref={errRef} aria-live='assertive' className={styles.Error}>\n            {errorMessage}\n          </p>\n        )}\n\n        <section className={styles.ExistingAccountCopy}>\n          <p>Already have an account?</p>\n          <p>\n            <NavLink to='/'>Login</NavLink>\n          </p>\n        </section>\n      </section>\n    </section>\n  );\n};\n\nexport default Signup;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}